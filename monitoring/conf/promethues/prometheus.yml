# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).
  query_log_file: /prometheus/query.log
# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
           - alertmanager:9093
#           - host.docker.internal:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"
  - "alerts/first_rules.yml" # 告警规则配置文件

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]

# nginx 监控
  - job_name: "nginx-prometheus-exporter"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["host.docker.internal:9113"]

  - job_name: "node_exporter"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["host.docker.internal:9100"]

  - job_name: "ruoyi"
    metrics_path: /actuator/prometheus
    static_configs:
      - targets: ["host.docker.internal:8080"]

  - job_name: 'blackbox-http_2xx'
    metrics_path: /probe
    params:
      module: [http_2xx]  # Look for a HTTP 200 response.
    static_configs:
      - targets:
          - http://prometheus.io    # Target to probe with http. 需要检测的地址
          - https://prometheus.io   # Target to probe with https.
          - http://example.com:8080 # Target to probe with http on port 8080.
          - http://baidu.com
          - http://google.com
          - http://www.google.com
          - http://www.qq.com
          - http://www.weibo.com
          - http://www.taobao.com
          - http://www.grafana.com
          - https://api.github.com/repos/prometheus/prometheus?callback=callback
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: host.docker.internal:9115  # The blackbox exporter's real hostname:port.
  - job_name: 'blackbox-http_post_2xx_custom'
    metrics_path: /probe
    params:
      module: [http_post_2xx_custom]  # Look for a HTTP 200 response.
    static_configs:
      - targets:
          - http://prometheus.io    # Target to probe with http. 需要检测的地址
          - https://prometheus.io   # Target to probe with https.
          - http://example.com:8080 # Target to probe with http on port 8080.
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: host.docker.internal:9115  # The blackbox exporter's real hostname:port.
  # 未测试
  # - job_name: 'blackbox-tcp_connect'
  #   metrics_path: /probe
  #   params:
  #     module: [tcp_connect]  # telnet
  #   static_configs:
  #     - targets:
  #         - 192.168.1.40:1883
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: __param_target
  #     - source_labels: [__param_target]
  #       target_label: instance
  #     - target_label: __address__
  #       replacement: host.docker.internal:9115  # The blackbox exporter's real hostname:port.
